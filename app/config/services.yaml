# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
        bind:
            $OPENAI_API_KEY: '%env(string:IA_API_KEY)%'
            $maxToken: '%env(int:MAX_TOKEN)%'
            $newsAPIKey: '%env(string:NEWS_API_KEY)%'
            $newsItemCount: '%env(int:NEWS_ITEM_COUNT)%'
            $maxTimeout: '%env(int:MAX_TIMEOUT)%'
            $urlProxy: '%env(string:URL_PROXY)%'
            $availableLangs: '%env(json:AVAILABLE_LANG)%'
            $needCreateImage: '%env(bool:NEED_CREATE_IMAGE)%'
            $countImage: '%env(int:COUNT_IMAGE)%'
            $adminEmail: '%env(string:ADMIN_EMAIL)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Orhanerday\OpenAi\OpenAi: ~
    PHPHtmlParser\Dom: ~
    
    _instanceof:
        App\Service\ContextProvider\ContextProviderInterface:
            tags: ['app.provider.news']
            
        App\Service\Parser\SiteParserInterface:
             tags: ['app.parser.site']
            
    App\MessageHandler\ContextHandler:
        arguments:
            $contextProviders: !tagged_iterator app.provider.news
            
    App\Service\Parser\ParserFactory:
        arguments:
            $siteParsers: !tagged_iterator app.parser.site
