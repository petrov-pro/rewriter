version: "3.9"

services:
  web:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app:/var/www/html
    depends_on:
      - php
    networks:
      - app-network
      
  rabbitmq:
    image: rabbitmq:3.9.7-management
    container_name: rabbitmq
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - app-network
      
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - 5432
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    user: "${UID}:${GID}"
    volumes:
      - ./app:/var/www/html
    environment:
      - APP_ENV=${APP_ENV}
    depends_on:
      - database
      - rabbitmq
      - redis
    networks:
      - app-network

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    ports:
      - "8191"
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
  rabbitmq_data:
  redis_data:
###< doctrine/doctrine-bundle ###

networks:
  app-network:
    driver: bridge
